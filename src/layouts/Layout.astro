---
export interface Props {
  title: string;
  description?: string;
  keywords?: string;
}

const { title, description = "Western Publish - Your trusted partner for ghostwriting, editing, formatting, publishing, and marketing services. Transform your ideas into published works.", keywords = "ghostwriting, book editing, publishing services, book formatting, book marketing, self-publishing, traditional publishing" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  
  <!-- SEO Meta Tags -->
  <title>{title}</title>
  <meta name="description" content={description} />
  <meta name="keywords" content={keywords} />
  <meta name="author" content="Western Publish" />
  
  <!-- Open Graph Meta Tags -->
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:type" content="website" />
  <meta property="og:site_name" content="Western Publish" />
  
  <!-- Twitter Meta Tags -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={description} />
  
  <!-- Schema Markup -->
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Organization",
      "name": "Western Publish",
      "url": "https://westernpublish.com",
      "logo": "https://westernpublish.com/logo.png",
      "description": "Professional publishing services including ghostwriting, editing, formatting, publishing, and marketing for authors.",
      "address": {
        "@type": "PostalAddress",
        "streetAddress": "1209 MOUNTAIN ROAD PL NE STE R",
        "addressLocality": "ALBUQUERQUE",
        "addressRegion": "NM",
        "postalCode": "87110",
        "addressCountry": "US"
      },
      "contactPoint": {
        "@type": "ContactPoint",
        "telephone": "+1-505-375-3181",
        "contactType": "customer service",
        "email": "info@westernpublish.com"
      },
      "sameAs": [
        "https://facebook.com/westernpublish",
        "https://twitter.com/westernpublish",
        "https://linkedin.com/company/westernpublish"
      ]
    }
  </script>
  
  <!-- Preload Critical Resources -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
  
  <!-- Animation Libraries -->
  <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
</head>
<body>
  <slot />
  
  <!-- Load AOS library before initialization -->
  <script is:global src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
  
  <!-- Initialize Animations -->
  <script is:global>
    document.addEventListener('DOMContentLoaded', function() {
      AOS.init({
        duration: 800,
        easing: 'ease-in-out',
        once: true,
        offset: 100
      });
      
      // Parallax effect
      window.addEventListener('scroll', () => {
        const scrolled = window.pageYOffset;
        const parallaxElements = document.querySelectorAll('.parallax');
        
        parallaxElements.forEach(element => {
          const speed = element.dataset.speed || 0.5;
          const yPos = -(scrolled * speed);
          element.style.transform = `translateY(${yPos}px)`;
        });
      });
      
      // Floating elements
      const floatingElements = document.querySelectorAll('.floating');
      floatingElements.forEach(element => {
        const amplitude = parseFloat(element.dataset.amplitude) || 20;
        const speed = parseFloat(element.dataset.speed) || 2;
        
        setInterval(() => {
          const offset = Math.sin(Date.now() / (1000 * speed)) * amplitude;
          element.style.transform = `translateY(${offset}px)`;
        }, 16);
      });
      
      // Typing effect
      function typeWriter(element, text, speed = 100) {
        let i = 0;
        element.innerHTML = '';
        
        function type() {
          if (i < text.length) {
            element.innerHTML += text.charAt(i);
            i++;
            setTimeout(type, speed);
          }
        }
        type();
      }
      
      // Initialize typing effects
      const typingElements = document.querySelectorAll('.typing-effect');
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && !entry.target.classList.contains('typed')) {
            const text = entry.target.dataset.text || entry.target.textContent;
            const speed = parseInt(entry.target.dataset.speed) || 100;
            typeWriter(entry.target, text, speed);
            entry.target.classList.add('typed');
          }
        });
      });
      
      typingElements.forEach(element => {
        observer.observe(element);
      });
    });
  </script>
</body>
</html>

<style is:global>
  :root {
    --primary-50: #eff6ff;
    --primary-100: #dbeafe;
    --primary-200: #bfdbfe;
    --primary-300: #93c5fd;
    --primary-400: #60a5fa;
    --primary-500: #3b82f6;
    --primary-600: #2563eb;
    --primary-700: #1d4ed8;
    --primary-800: #1e40af;
    --primary-900: #1e3a8a;
    
    --secondary-50: #ecfeff;
    --secondary-100: #cffafe;
    --secondary-200: #a5f3fc;
    --secondary-300: #67e8f9;
    --secondary-400: #22d3ee;
    --secondary-500: #06b6d4;
    --secondary-600: #0891b2;
    --secondary-700: #0e7490;
    --secondary-800: #155e75;
    --secondary-900: #164e63;
    
    --accent-50: #fffbeb;
    --accent-100: #fef3c7;
    --accent-200: #fde68a;
    --accent-300: #fcd34d;
    --accent-400: #fbbf24;
    --accent-500: #f59e0b;
    --accent-600: #d97706;
    --accent-700: #b45309;
    --accent-800: #92400e;
    --accent-900: #78350f;
    
    --success-500: #10b981;
    --warning-500: #f59e0b;
    --error-500: #ef4444;
    
    --gray-50: #f9fafb;
    --gray-100: #f3f4f6;
    --gray-200: #e5e7eb;
    --gray-300: #d1d5db;
    --gray-400: #9ca3af;
    --gray-500: #6b7280;
    --gray-600: #4b5563;
    --gray-700: #374151;
    --gray-800: #1f2937;
    --gray-900: #111827;
    
    --font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    --spacing-1: 0.25rem;
    --spacing-2: 0.5rem;
    --spacing-3: 0.75rem;
    --spacing-4: 1rem;
    --spacing-5: 1.25rem;
    --spacing-6: 1.5rem;
    --spacing-8: 2rem;
    --spacing-10: 2.5rem;
    --spacing-12: 3rem;
    --spacing-16: 4rem;
    --spacing-20: 5rem;
    --spacing-24: 6rem;
    --spacing-32: 8rem;
    
    --border-radius: 0.5rem;
    --border-radius-lg: 0.75rem;
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  }

  * {
    box-sizing: border-box;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    margin: 0;
    padding: 0;
    font-family: var(--font-family);
    font-size: 16px;
    line-height: 1.6;
    color: var(--gray-700);
    background-color: var(--gray-50);
  }

  h1, h2, h3, h4, h5, h6 {
    margin: 0;
    font-weight: 600;
    line-height: 1.2;
    color: var(--gray-900);
  }

  h1 {
    font-size: 2.25rem;
    font-weight: 700;
  }

  h2 {
    font-size: 1.875rem;
  }

  h3 {
    font-size: 1.5rem;
  }

  h4 {
    font-size: 1.25rem;
  }

  p {
    margin: 0 0 var(--spacing-4) 0;
    color: var(--gray-600);
  }

  a {
    color: var(--primary-600);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  a:hover {
    color: var(--primary-700);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--spacing-4);
  }

  .section {
    padding: var(--spacing-20) 0;
  }

  .section-sm {
    padding: var(--spacing-16) 0;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--spacing-3) var(--spacing-6);
    font-size: 1rem;
    font-weight: 500;
    text-decoration: none;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all 0.2s ease;
    line-height: 1.5;
  }

  .btn-primary {
    background-color: var(--primary-600);
    color: white;
  }

  .btn-primary:hover {
    background-color: var(--primary-700);
    color: white;
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }

  .btn-secondary {
    background-color: var(--secondary-600);
    color: white;
  }

  .btn-secondary:hover {
    background-color: var(--secondary-700);
    color: white;
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }

  .btn-outline {
    background-color: transparent;
    color: var(--primary-600);
    border: 2px solid var(--primary-600);
  }

  .btn-outline:hover {
    background-color: var(--primary-600);
    color: white;
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }

  .btn-lg {
    padding: var(--spacing-4) var(--spacing-8);
    font-size: 1.125rem;
  }

  .card {
    background: white;
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-sm);
    padding: var(--spacing-8);
    transition: all 0.2s ease;
  }

  .card:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
  }

  .grid {
    display: grid;
    gap: var(--spacing-8);
  }

  .grid-2 {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  .grid-3 {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }

  .text-center {
    text-align: center;
  }

  .text-large {
    font-size: 1.25rem;
    line-height: 1.7;
  }

  .text-muted {
    color: var(--gray-500);
  }

  .mb-4 {
    margin-bottom: var(--spacing-4);
  }

  .mb-6 {
    margin-bottom: var(--spacing-6);
  }

  .mb-8 {
    margin-bottom: var(--spacing-8);
  }

  .mb-12 {
    margin-bottom: var(--spacing-12);
  }

  .mt-8 {
    margin-top: var(--spacing-8);
  }

  .mt-12 {
    margin-top: var(--spacing-12);
  }

  /* Animation Classes */
  .parallax {
    will-change: transform;
  }

  .floating {
    will-change: transform;
  }

  .typing-effect {
    border-right: 2px solid var(--primary-600);
    animation: blink 1s infinite;
  }

  .typing-effect.typed {
    border-right: none;
    animation: none;
  }

  @keyframes blink {
    0%, 50% { border-color: var(--primary-600); }
    51%, 100% { border-color: transparent; }
  }

  .rotate-slow {
    animation: rotate 20s linear infinite;
  }

  @keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .pulse {
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
  }

  @media (max-width: 768px) {
    h1 {
      font-size: 1.875rem;
    }

    h2 {
      font-size: 1.5rem;
    }

    .section {
      padding: var(--spacing-12) 0;
    }

    .container {
      padding: 0 var(--spacing-3);
    }

    .btn-lg {
      padding: var(--spacing-3) var(--spacing-6);
      font-size: 1rem;
    }
  }
</style>